{"version":3,"sources":["App.js","index.js"],"names":["App","props","deleteAll","setState","list","state","newTask","key","value","this","id","Math","random","slice","push","updatedList","filter","task","className","type","placeholder","onChange","e","updateInput","target","onClick","addTask","disabled","length","map","class","contentEditable","deleteTask","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAqFeA,G,wDAjFb,WAAYC,GAAQ,IAAD,8BACjB,gBAwCFC,UAAY,WAEV,EAAKC,UAAS,iBAAO,CAACC,KAAM,QAzC5B,EAAKC,MAAQ,CACXC,QAAS,GACTF,KAAM,IAJS,E,wDAQPG,EAAKC,GACfC,KAAKN,SAAL,eAAiBI,EAAMC,M,gCAKvB,IAAMF,EAAU,CACdI,GAAI,EAAIC,KAAKC,SACbJ,MAAOC,KAAKJ,MAAMC,QAAQO,SAItBT,EAAI,YAAOK,KAAKJ,MAAMD,MAG5BA,EAAKU,KAAKR,GAGVG,KAAKN,SAAS,CACZC,OACAE,QAAS,O,iCAIFI,GAET,IAEMK,EAFI,YAAON,KAAKJ,MAAMD,MAEHY,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDD,KAAKN,SAAS,CAAEC,KAAMW,M,+BAQd,IAAD,OACP,OACE,6BACE,wBAAIG,UAAU,aAAd,gBACA,yBAAKA,UAAU,aACb,2BACEC,KAAK,OACLC,YAAY,kBACZZ,MAAOC,KAAKJ,MAAMC,QAClBe,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAWD,EAAEE,OAAOhB,UACtD,4BACEiB,QAAS,kBAAM,EAAKC,WACpBC,UAAWlB,KAAKJ,MAAMC,QAAQsB,QAFhC,OAGA,4BACElB,GAAG,YACHe,QAAS,kBAAM,EAAKvB,cAFtB,cAGA,4BACGO,KAAKJ,MAAMD,KAAKyB,KAAI,SAAAZ,GACnB,OACE,uBAAGP,GAAI,QAAQH,IAAKU,EAAKP,IACvB,2BAAOA,GAAG,WAAWS,KAAK,aAC1B,2BAAOW,MAAM,gBAAgBC,gBAAgB,QAAO,gCAASd,EAAKT,QAClE,4BAAQE,GAAG,MAAMe,QAAS,kBAAM,EAAKO,WAAWf,EAAKP,MAArD,KAEA,wC,GAvEAuB,IAAMC,YCCxBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4bb99937.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      newTask: \"\",\n      list: []\n    };\n  }\n\n  updateInput(key, value) {\n    this.setState({ [key]: value });\n  }\n\n  addTask() {\n    // creating a new task with an unique id\n    const newTask = {\n      id: 1 + Math.random(),\n      value: this.state.newTask.slice()\n    };\n\n    // copy current list of tasks\n    const list = [...this.state.list];\n\n    // pushing new task to the list\n    list.push(newTask);\n\n    // update state with new list, reset the new task input\n    this.setState({\n      list,\n      newTask: \"\"\n    });\n  }\n\n  deleteTask(id) {\n    // copying current list of tasks\n    const list = [...this.state.list];\n    // filter out the task being deleted\n    const updatedList = list.filter(task => task.id !== id);\n\n    this.setState({ list: updatedList });\n  }\n\n  deleteAll = () => {\n    // delete all function that clears all tasks in list array\n    this.setState(() => ({list: []}))\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1 className=\"app-title\">ToDoList App</h1>\n        <div className=\"container\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter Task Here\"\n            value={this.state.newTask}\n            onChange={e => this.updateInput(\"newTask\", e.target.value)}/>\n          <button\n            onClick={() => this.addTask()}\n            disabled={!this.state.newTask.length}>Add</button>\n          <button \n            id=\"deleteall\" \n            onClick={() => this.deleteAll()}>Delete All</button>\n          <ul>\n            {this.state.list.map(task => {\n              return (\n                <i id =\"tasks\" key={task.id}>\n                  <input id=\"checkbox\" type=\"checkbox\"/>\n                  <label class=\"strikethrough\" contentEditable=\"true\"><strong>{task.value}</strong></label>\n                  <button id=\"btn\" onClick={() => this.deleteTask(task.id)}>X\n                  </button>\n                  <br></br>\n                </i>\n              );\n            })}\n          </ul>\n          </div>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}